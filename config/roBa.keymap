#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_SHIFT Q    &kp W     &kp E               &kp R                                &kp T                                                           &kp Y                 &kp U     &lt 5 I    &kp O    &kp P
&kp A               &kp S     &lt_to_layer_0 3 D  &lt_to_layer_0 5 F                   &kp G        &kp LS(LG(S))             &lt_to_layer_0 6 H       &kp J                 &mkp MB1  &kp K      &kp L    &kp MINUS
&lt_to_layer_0 5 Z  &kp X     &kp C               &kp V                                &kp B        &mkp MB1                  &kp SEMICOLON            &kp N                 &kp M     &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_CONTROL    &kp LWIN  &kp LEFT_ALT        &lt_to_layer_0 1 LA(LS(LANGUAGE_5))  &lt 2 SPACE  &lt_to_layer_0 3 TAB      &mt BACKSPACE BACKSPACE  &mt LEFT_SHIFT ENTER                                &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        Kigou {
            bindings = <
&kp LS(NUMBER_1)   &kp LS(DOUBLE_QUOTES)  &kp HASH  &kp LS(DOLLAR)  &kp PERCENT                      &kp AMPERSAND  &kp SQT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp LS(BACKSLASH)  &trans                 &kp PLUS  &trans          &trans       &trans      &none   &none          &kp J    &kp PAGE_UP           &mkp RCLK              &kp SEMI
&trans             &trans                 &trans    &trans          &trans       &trans      &trans  &trans         &trans   &kp PAGE_DOWN         &trans                 &kp UNDER
&kp INT_YEN        &kp CARET              &trans    &trans          &trans       &trans      &trans  &trans                                                               &none
            >;
        };

        Yajirushi_ctrl {
            bindings = <
&none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LG(LC(V))  &kp EQUAL                                      &kp DOLLAR  &kp AMPERSAND  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH
&none      &kp KP_NUMBER_4   &kp KP_NUMBER_5    &kp LC(LS(V))  &kp RS(SEMICOLON)  &trans      &kp UNDERSCORE  &none       &mkp MB1       &kp AT_SIGN       &kp UP_ARROW       &kp COLON
&kp SLASH  &kp KP_NUMBER_1   &kp KP_NUMBER_2    &kp LC(V)      &kp LA(C)          &none       &trans          &kp LC(N0)  &kp LA(RIGHT)  &kp LEFT          &kp DOWN           &kp RIGHT
&trans     &trans            &trans             &trans         &trans             &trans      &kp DELETE      &kp ESCAPE                                                      &none
            >;
        };

        num {
            bindings = <
&kp LS(ESCAPE)  &none   &none        &kp LS(LA(O))  &kp PERCENT                      &kp COMMA     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH
&trans          &trans  &none        &kp LS(LA(F))  &kp RIGHT    &trans      &none   &kp PERIOD    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK
&kp KP_NUMLOCK  &none   &kp LA(F12)  &kp LA(F11)    &kp LEFT     &trans      &none   &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS
&trans          &trans  &trans       &trans         &trans       &trans      &trans  &kp PLUS                                                &kp PLUS
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        shift+allow {
            bindings = <
&trans  &trans        &trans       &trans  &trans                                      &trans  &trans    &trans        &trans              &trans
&trans  &trans        &trans       &trans  &kp LS(LA(UP_ARROW))    &trans      &trans  &trans  &mkp MB1  &none         &mkp MB2            &trans
&trans  &kp LA(HOME)  &kp LA(END)  &trans  &kp LS(LA(DOWN_ARROW))  &trans      &trans  &trans  &trans    &kp LS(LEFT)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT)
&trans  &trans        &trans       &trans  &trans                  &trans      &trans  &trans                                              &trans
            >;
        };

        Function {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp F12        &kp F7  &kp F8  &kp F9  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp F11        &kp F4  &kp F5  &kp F6  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp F10        &kp F1  &kp F2  &kp F3  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LC(ENTER)                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
